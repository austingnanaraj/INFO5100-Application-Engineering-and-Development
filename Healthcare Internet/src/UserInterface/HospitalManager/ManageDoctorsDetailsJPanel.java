/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.HospitalManager;


import UserInterface.Hospital.Doctor.AddDoctorsJPanel;
import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AustinGnanaraj
 */
public class ManageDoctorsDetailsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Organization organization;
    /**
     * Creates new form ViewPatientDetailsJPanel
     */
    public ManageDoctorsDetailsJPanel(JPanel userProcessContainer,Enterprise enterprise,Organization organization,UserAccount userAccount) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.enterprise=enterprise;
        this.userAccount=userAccount;
        this.organization=organization;
        populatetable();
    }

    public void populatetable() {
        DefaultTableModel dtm = (DefaultTableModel) viewDoctorDetailsJTable.getModel();
        dtm.setRowCount(0);

        for (Doctor d : ((HospitalEnterprise)enterprise).getDoctorDirectory().getDoctorDirectory()) {
            Object row[] = new Object[5];
            row[0] = d;
            row[1] = d.getSsn();
            row[2] = d.getPhoneNumber();
             row[3] = d.getAddress();
            row[4] = d.getDepartment();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewDoctorDetailsJTable = new javax.swing.JTable();
        patientDetailsJLabel = new javax.swing.JLabel();
        searchJButton = new javax.swing.JButton();
        searchPatientJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();
        addDoctorJButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewDoctorDetailsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name", "SSN", "Contact Number", "Address", "Department name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewDoctorDetailsJTable);
        if (viewDoctorDetailsJTable.getColumnModel().getColumnCount() > 0) {
            viewDoctorDetailsJTable.getColumnModel().getColumn(0).setResizable(false);
            viewDoctorDetailsJTable.getColumnModel().getColumn(1).setResizable(false);
            viewDoctorDetailsJTable.getColumnModel().getColumn(2).setResizable(false);
            viewDoctorDetailsJTable.getColumnModel().getColumn(3).setResizable(false);
            viewDoctorDetailsJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 43, 789, 184));

        patientDetailsJLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        patientDetailsJLabel.setText("Doctor Details");
        add(patientDetailsJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 13, -1, -1));

        searchJButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchJButton.setText("Search Patient");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });
        add(searchJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 260, -1, -1));
        add(searchPatientJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 261, 103, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 80, 30));

        deleteJButton.setText("Delete Doctor");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });
        add(deleteJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 140, 30));

        addDoctorJButton.setText("Add Doctor>>");
        addDoctorJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorJButtonActionPerformed(evt);
            }
        });
        add(addDoctorJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 310, -1, -1));

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 260, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJButtonActionPerformed
        // TODO add your handling code here:

    /*    String searchResult = searchPatientJTextField.getText();
        if (searchResult == null || searchResult.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please input the Patient ID", "warning", JOptionPane.WARNING_MESSAGE);
        }
        Patient search = patientHistory.searchPatient(searchResult);

// if we don't find the result 
        if (searchResult == null) {
            JOptionPane.showMessageDialog(null, "Input a valid PatientID", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        SearchPatientJPanel sp = new SearchPatientJPanel(userContainer, search);
        userContainer.add("SearchPatientJPanel", sp);
        CardLayout layout = (CardLayout) userContainer.getLayout();
        layout.next(userContainer);
            */


    }//GEN-LAST:event_searchJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewDoctorDetailsJTable.getSelectedRow();
        if (selectedRow >= 0) {
            Doctor d = (Doctor) viewDoctorDetailsJTable.getValueAt(selectedRow, 0);
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete", "warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
               ((HospitalEnterprise)enterprise).getDoctorDirectory().removePerson(d);
                
            populatetable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row first!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void addDoctorJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorJButtonActionPerformed
        // TODO add your handling code here:
         AddDoctorsJPanel adoc = new AddDoctorsJPanel(userProcessContainer, enterprise,organization);
        userProcessContainer.add("AddDoctorsJPanel", adoc);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_addDoctorJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            populatetable();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDoctorJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel patientDetailsJLabel;
    private javax.swing.JButton searchJButton;
    private javax.swing.JTextField searchPatientJTextField;
    private javax.swing.JTable viewDoctorDetailsJTable;
    // End of variables declaration//GEN-END:variables

}