/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.Doctor.PatientDetailRequest;

import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.DoctorOrganization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorRequestsPatientDetail;
import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AustinGnanaraj
 */
public class SearchPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchPatientJPanel
     */
    JPanel userProcessContainer;
    DoctorOrganization organization;
    UserAccount account;
    EcoSystem eco;
    Doctor doc1;
    HospitalEnterprise enterprise;

    public SearchPatientJPanel(JPanel userProcessContainer, DoctorOrganization organization, UserAccount account, EcoSystem eco, HospitalEnterprise enterprise) {
        initComponents();
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.account = account;
        this.eco = eco;
        for (Doctor d : enterprise.getDoctorDirectory().getDoctorDirectory()) {
            if (d.getName().equals(account.getPerson().getName())) {
                doc1 = (Doctor) d;
            }
        }
        populateWorkRequest();
        //populateEnquiryDirectory();
        populatePatientFound();
        

    }

    private void populatePatientFound() {
        DefaultTableModel dtm = (DefaultTableModel) patientsFoundjTable.getModel();
        dtm.setRowCount(0);

        for (Patient e : doc1.getPatientEnquiryDirectory().getPatientDirectory()) {
            Object[] row = new Object[5];
            row[0] = e;
            row[1] = e.getSsn() ;


            dtm.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSSN = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnRequest = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        patientsFoundjTable = new javax.swing.JTable();
        refreshpatientsFoundJButton = new javax.swing.JButton();
        btnEncounterHistory = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnVitalSignHistory = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(txtSSN, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 40, 190, 30));

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sender", "Patient SSN", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatient);
        if (tblPatient.getColumnModel().getColumnCount() > 0) {
            tblPatient.getColumnModel().getColumn(0).setResizable(false);
            tblPatient.getColumnModel().getColumn(1).setResizable(false);
            tblPatient.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 570, 110));

        jLabel1.setText("Patient SSN");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 120, 30));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 90, 190, 30));

        jLabel2.setText("Patient Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, 120, 30));

        btnRequest.setText("Send Request");
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });
        add(btnRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 140, 320, 60));

        patientsFoundjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Patient name", "Patient SSN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(patientsFoundjTable);
        if (patientsFoundjTable.getColumnModel().getColumnCount() > 0) {
            patientsFoundjTable.getColumnModel().getColumn(0).setResizable(false);
            patientsFoundjTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 580, 130));

        refreshpatientsFoundJButton.setText("Refresh >>");
        add(refreshpatientsFoundJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 130, -1));

        btnEncounterHistory.setText("Get Encounter History >>");
        btnEncounterHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterHistoryActionPerformed(evt);
            }
        });
        add(btnEncounterHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 200, 30));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Request List");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 190, 30));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Doctor's Enquiry Directory");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 290, 30));

        btnVitalSignHistory.setText("Get Vital Sign History>>");
        add(btnVitalSignHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 570, 200, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 540, 110));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date of Test", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 570, 540, 100));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
        String ssn = (txtSSN.getText());
        DoctorRequestsPatientDetail docRequest = new DoctorRequestsPatientDetail();
        docRequest.setPatientSSN(ssn);
        docRequest.setPatientName(txtName.getText());
        docRequest.setSender(account);
        docRequest.setStatus("requested");
        docRequest.setEnterpriseName(enterprise.getName());
        docRequest.setDoctor(doc1);
        if (!organization.equals(null)) {

            eco.getEmergencyRequestDirectory().getWorkRequestList().add(docRequest);
            organization.getWorkqueue().getWorkRequestList().add(docRequest);
            account.getWorkQueue().getWorkRequestList().add(docRequest);
        }
        populateWorkRequest();
    }//GEN-LAST:event_btnRequestActionPerformed

    private void btnEncounterHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterHistoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEncounterHistoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEncounterHistory;
    private javax.swing.JButton btnRequest;
    private javax.swing.JButton btnVitalSignHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable patientsFoundjTable;
    private javax.swing.JButton refreshpatientsFoundJButton;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSSN;
    // End of variables declaration//GEN-END:variables

    private void populateWorkRequest() {
        DefaultTableModel dtm = (DefaultTableModel) tblPatient.getModel();
        dtm.setRowCount(0);

        for (WorkRequest work : account.getWorkQueue().getWorkRequestList()) {
            Object row[] = new Object[3];
            row[0] = work.getSender();
            DoctorRequestsPatientDetail doc = (DoctorRequestsPatientDetail) work;
            row[1] = doc.getPatientSSN();
            row[2] = work.getStatus();

            dtm.addRow(row);

        }
    }

}
