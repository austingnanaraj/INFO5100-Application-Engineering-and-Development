/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.Doctor.Adverse;

import Business.Doctor.Doctor;
import Business.Drug.Drug;
import Business.EcoSystem;
import Business.Enterprise.DrugEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AustinGnanaraj
 */
public class AdverseEventsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdverseEventsJPanel
     */
    JPanel container;
    UserAccount account;
    EcoSystem eco;
    Drug drug;
    Enterprise e;
    Doctor doc;

    public AdverseEventsJPanel(JPanel container,UserAccount account,EcoSystem eco, Enterprise e) {
        initComponents();
        this.container = container;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        adverseEventsJTbl = new javax.swing.JTable();
        btnReview = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adverseEventsJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Drug Name", "Drug Company"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(adverseEventsJTbl);
        if (adverseEventsJTbl.getColumnModel().getColumnCount() > 0) {
            adverseEventsJTbl.getColumnModel().getColumn(0).setResizable(false);
            adverseEventsJTbl.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 686, 150));

        btnReview.setText("Review");
        btnReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReviewActionPerformed(evt);
            }
        });
        add(btnReview, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 320, 190, 50));
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 70, 140, 30));

        jButton1.setText("Search");
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 70, 120, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void btnReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReviewActionPerformed
        int selectedRow = adverseEventsJTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }

        {
            drug = (Drug) adverseEventsJTbl.getValueAt(selectedRow, 0);

            for (Doctor doct : ((HospitalEnterprise) e).getDoctorDirectory().getDoctorDirectory()) {
                if (account.getPerson().getName().equals(doct.getName())) {
                    this.doc = doct;
                    break;
                }
            }

            ReviewAdverseEffectsJPanel raejp = new ReviewAdverseEffectsJPanel(container, drug, account, doc,eco);
            container.add("ReviewAdverseEffectsJPanel", raejp);

            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);

        }
    }//GEN-LAST:event_btnReviewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable adverseEventsJTbl;
    private javax.swing.JButton btnReview;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) adverseEventsJTbl.getModel();
        dtm.setRowCount(0);

        for (Network n : eco.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.Drug)) {
                    for (Drug d : ((DrugEnterprise) e).getDrugDirectory().getDrugDirectory()) {
                        Object row[] = new Object[2];
                        row[0] = d;
                        row[1] = d.getManufacturingCompany();
//            row[4] = d.getDepartment();
                        dtm.addRow(row);

                    }

                }

            }
        }
    }
}
